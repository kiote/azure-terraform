---
- name: Create Kubernetes directory
  file:
    path: /home/{{ ansible_user }}/k3s/{{ app_name }}
    state: directory

- name: Create Kubernetes namespace file
  copy:
    dest: /home/{{ ansible_user }}/k3s/{{ app_name }}/namespace.yml
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    content: |
      apiVersion: v1
      kind: Namespace
      metadata:
        name: {{ app_namespace }}

- name: Create Kubernetes deployment file
  copy:
    dest: /home/{{ ansible_user }}/k3s/{{ app_name }}/deployment.yml
    content: |
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: {{ app_name }}
        namespace: {{ app_namespace }}
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: {{ app_name }}
        template:
          metadata:
            labels:
              app: {{ app_name }}
          spec:
            containers:
            - name: {{ app_name }}
              image: {{ docker_image_name }}:latest
              imagePullPolicy: Never # Only local images
              ports:
              - containerPort: 5000
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

- name: Create Kubernetes service file
  copy:
    dest: /home/{{ ansible_user }}/k3s/{{ app_name }}/service.yml
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    content: |
      apiVersion: v1
      kind: Service
      metadata:
        name: {{ app_name }}
        namespace: {{ app_namespace }}
      spec:
        selector:
          app: {{ app_name }}
        ports:
          - protocol: TCP
            port: 80
            targetPort: 5000
        type: LoadBalancer

- name: Remove namespace if it exists
  shell: kubectl delete -f /home/{{ ansible_user }}/k3s/{{ app_name }}/namespace.yml
  ignore_errors: yes
  become: yes
  become_user: "{{ ansible_user }}"

- name: Apply Kubernetes namespace
  shell: kubectl apply -f /home/{{ ansible_user }}/k3s/{{ app_name }}/namespace.yml
  become: yes
  become_user: "{{ ansible_user }}"

- name: Apply Kubernetes deployment
  shell: kubectl apply -f /home/{{ ansible_user }}/k3s/{{ app_name }}/deployment.yml
  become: yes
  become_user: "{{ ansible_user }}"

- name: Apply Kubernetes service
  shell: kubectl apply -f /home/{{ ansible_user }}/k3s/{{ app_name }}/service.yml
  become: yes
  become_user: "{{ ansible_user }}"
